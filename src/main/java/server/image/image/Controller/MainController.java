package server.image.image.Controller;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import jakarta.servlet.http.HttpServletRequest;

import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.ui.Model;

import server.image.image.Model.URI;
import server.image.image.Repository.URIrepo;

@CrossOrigin
@Controller // This means that this class is a Controller
@RequestMapping(path="/image") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
             // Which is auto-generated by Spring, we will use it to handle the data
  private URIrepo URIrepo;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String uploadImage (@RequestParam Integer uriString
      , @RequestParam String fileString) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
          URI info = new URI();
          info.setUID(uriString);
          info.setFile(fileString);
          URIrepo.save(info);
      return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<URI> getAllUsers() {
    // This returns a JSON or XML with the users
    return URIrepo.findAll();
  }


  @GetMapping("greeting")
	public String greeting(@RequestParam(name="name", required=false, defaultValue="World") String name, Model model) {
		model.addAttribute("name", name);
		return "greeting";
	}

  @GetMapping("/upload")
	public String uploadString(@ModelAttribute URI uri, HttpServletRequest request) {
		return "upload";
	}
}
